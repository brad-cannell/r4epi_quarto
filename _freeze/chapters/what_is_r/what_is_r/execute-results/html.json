{
  "hash": "d031eb22a73dc8ebcd17e6b00a8459af",
  "result": {
    "engine": "knitr",
    "markdown": "# What is R?\n\nAt this point in the book, you should have installed R and RStudio on your computer, but you may be thinking to yourself, ‚ÄúI don‚Äôt even know what R is.‚Äù Well, in this chapter you‚Äôll find out. We‚Äôll start with an overview of the R language, and then briefly touch on its capabilities and uses. You‚Äôll also see a complete R program and some complete documents generated by R programs. In this book you‚Äôll learn how to create similar programs and documents, and by the end of the book you‚Äôll be able to write your own R programs and present your results in the form of an issue brief written for general audiences who may or may not have public health expertise. But, before we discuss R let‚Äôs discuss something even more basic ‚Äì data. Here‚Äôs a question for you: What is data?\n\n## What is data?\n\nData is information about objects (e.g., people, places, schools) and observable phenomenon (e.g., weather, temperatures, and disease symptoms) that is recorded and stored somehow as a collection of symbols, numbers, and letters. So, data is just information that has been \"written\" down.\n\n<!-- maybe insert a data fig -->\n\nHere we have a table, which is a common way of organizing data. In R, we will typically refer to these tables as **data frames**.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](table.png)\n:::\n:::\n\n\nEach box in a data frame is called a **cell**.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](table_cells.png)\n:::\n:::\n\n\nMoving from left to right across the data frame are **columns**. Columns are also sometimes referred to as **variables**. In this book, we will often use the terms columns and variables interchangeably. Each column in a data frame has one, and only one, type. For now, know that the type tells us what kind of data is contained in a column and what we can _do_ with that data. You may have already noticed that 3 of the columns in the table we‚Äôve been looking at contain numbers and 1 of the columns contains words. These columns will have different types in R and we can do different things with them based on their type. For example, we could ask R to tell us what the average value of the numbers in the height column are, but it wouldn‚Äôt make sense to ask R to tell us the average value of the words in the Gender column. We will talk more about many of the different column types exist in R later in this book.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](table_columns.png)\n:::\n:::\n\n\nThe information contained in the first cell of each column is called the **column name** (or variable) name.\n\nR gives us a lot of flexibility in terms of what we can name our columns, but there are a few rules. \n\n1. Column names can contain letters, numbers and the dot (.) or underscore (_) characters.    \n2. Additionally, they can begin with a letter or a dot -- as long as the dot is not followed by a number. So, a name like \".2cats\" is not allowed.    \n3. Finally, R has some reserved words that you are not allowed to use for column names. These include: ‚Äúif‚Äù,  ‚Äúelse‚Äù, ‚Äúrepeat‚Äù, ‚Äúwhile‚Äù, ‚Äúfunction‚Äù, ‚Äúfor‚Äù, ‚Äúin‚Äù, ‚Äúnext‚Äù, and ‚Äúbreak‚Äù.    \n\n\n::: {.cell}\n::: {.cell-output-display}\n![](table_column_name.png)\n:::\n:::\n\n\nMoving from top to bottom across the table are **rows**, which are sometimes referred to as records.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](table_rows.png)\n:::\n:::\n\n\nFinally, the contents of each cell are called **values**. \n\n\n::: {.cell}\n::: {.cell-output-display}\n![](table_values.png)\n:::\n:::\n\n\nYou should now be up to speed on some basic terminology used by R, as well as other analytic, database, and spreadsheet programs. These terms will be used repeatedly throughout the course.\n\n## What is R?\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](r_logo.png)\n:::\n:::\n\n\nSo, what is R? Well, R is an **open source** statistical programming language that was created in the 1990‚Äôs specifically for data analysis. We will talk more about what open source means later, but for now, just think of R as an easy (relatively üòÇ) way to ask your computer to do math and statistics for you. More specifically, by the end of this book you will be able to independently use R to transfer data, manage data, analyze data, and present the results of your analysis. Let‚Äôs quickly take a closer look at each of these.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](competencies_overview.png)\n:::\n:::\n\n\n### Transferring data {#transferring-data}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](competencies_transfer.png)\n:::\n:::\n\n\nSo, what do we mean by ‚Äútransfer data‚Äù? Well, individuals and organizations store their data using different computer programs that use different file types. Some common examples that you may come across in epidemiology are database files, spreadsheets, raw data files, and SAS data sets. No matter how the data is stored, you can‚Äôt do anything with it until you can get it into R, in a form that R can use, and in a location that you can reach. In other words, transferring your data. Therefore, among our first tasks in this course will be to transfer data.\n\n### Managing data\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](competencies_manage.png)\n:::\n:::\n\n\nThis isn‚Äôt very specific, but managing data is all the things you may have to do to your data to get it ready for analysis. You may also hear people refer to this process as data wrangling or data munging. Some specific examples of data management tasks include:\n\n* <span class=\"underline\">Validating and cleaning data</span>. In other words, dealing with potential errors in the data.   \n* <span class=\"underline\">Subsetting data</span>. For example, using only some of the columns or some of the rows.    \n* <span class=\"underline\">Creating new variables</span>. For example, creating a BMI variable in a data frame that was sent to you with height and weight columns.    \n* <span class=\"underline\">Combining data frames</span>. For example, combining sociodemographic data about study participants with data collected in the field during an intervention.    \n\nYou may sometimes hear people refer to the 80/20 rule in reference to data management. This ‚Äúrule‚Äù says that in a typical data analysis project, roughly 80% of your time will be spent on data management and only 20% will be spent on the analysis itself. We can‚Äôt provide you with any empirical evidence (i.e., data) to back this claim up. But, as people who have been involved in many projects that involve the collection and analysis of data, we can tell you anecdotally that this ‚Äùrule‚Äù is probably pretty close to being accurate in most cases. \n\nAdditionally, it‚Äôs been our experience that most students of epidemiology are required to take one or more classes that emphasize methods for analyzing data; however, almost none of them have taken a course that emphasizes data management! \n\nTherefore, because data management is such a large component of most projects that involve the collection and analysis of data, and because most readers will have already been exposed to data analysis to a much greater extent than data management, this course will heavily emphasize the latter.\n\n### Analyzing data\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](competencies_analysis.png)\n:::\n:::\n\n\nAs just discussed, this is probably the capability you most closely associate with R, and there is no doubt that R is a powerful tool for analyzing data. However, in this book we won‚Äôt go beyond using R to calculate basic descriptive statistics. For our purposes, descriptive statistics include:    \n\n* <span class=\"underline\">Measures of central tendency</span>. For example, mean, median, and mode.   \n* <span class=\"underline\">Measures of dispersion</span>. For example, variance and standard error.   \n* <span class=\"underline\">Measures for describing categorical variables</span>. For example, counts and percentages.   \n* <span class=\"underline\">Describing data using graphs and charts</span>. With R, we can describe our data using [beautiful and informative graphs](https://www.r-graph-gallery.com/).   \n\n### Presenting data\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](competencies_present.png)\n:::\n:::\n\n\nAnd finally, the ultimate goal is typically to present your findings in some form or another. For example, a report, a website, or a journal article. With R you can present your results in many different formats with relative ease. In fact, this is one of our favorite things about R and RStudio. In this class you will learn how to take your text, tabular, or graphical results and then publish them in many different formats including Microsoft Word, html files that can be viewed in web browsers, and pdf documents. Let‚Äôs take a look at some examples.\n\n1. **Microsoft Word documents**. [Click here](https://www.dropbox.com/s/6l1ikp6wbyue9bd/chap_2_example_word_docI.docx?dl=0) to view an example report created for one of our research projects in Microsoft Word.   \n2. **PDF documents**. [Click here](https://www.dropbox.com/s/hheuyv5qcabf197/chap_2_example_pdf.pdf?dl=0) to view a data dictionary we created in PDF format.   \n3. **HTML files**. Hypertext Markup Language (HTML) files are what you are looking at whenever you view a webpage. You can use R to create HTML files that others can view in their web browser. You can email them these files to view in their web browser, or you can make them available for others to view online just like any other website. [Click here](https://brad-cannell.github.io/detect_recruitment_dashboard/) to view an example dashboard we created for one of our research projects.    \n4. **Web applications**. You can even use R to create full-fledged web applications. View the [RStudio website](https://shiny.rstudio.com/gallery/) to see some examples.\n",
    "supporting": [
      "what_is_r_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R 4 Epidemiology",
    "section": "",
    "text": "Welcome\nWelcome to R for Epidemiology!\nThis electronic textbook was originally created to accompany the Introduction to R Programming for Epidemiologic Research course at the University of Texas Health Science Center School of Public Health. However, we hope it will be useful to anyone who is interested in R, epidemiology, or human health and well-being.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "R 4 Epidemiology",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nThis book is currently a work in progress (and probably always will be); however, there are already many people who have played an important role (some unknowingly) in helping develop it thus far. First, we’d like to offer our gratitude to all past, current, and future members of the R Core Team for maintaining this amazing, free software. We’d also like to express our gratitude to everyone at Posit. You are also developing and giving away some amazing software. In particular, we’d like to acknowledge Garrett Grolemund and Hadley Wickham. Both have had a huge impact on how we use and teach R. We’d also like to thank our students for all the feedback they’ve given us while taking our courses. In particular, we want to thank Jared Wiegand and Yiqun Wang for their many edits and suggestions.\nThis electronic textbook was created and published using R, RStudio, the Quarto, and GitHub.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "chapters/introduction.html",
    "href": "chapters/introduction.html",
    "title": "Introduction",
    "section": "",
    "text": "Goals\nWe’re going to start the introduction by writing down some basic goals that underlie the construction and content of this book. We’re writing this for you, the reader, but also to hold ourselves accountable as we write. So, feel free to read if you are interested or skip ahead if you aren’t.\nThe goals of this book are:",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "chapters/introduction.html#goals",
    "href": "chapters/introduction.html#goals",
    "title": "Introduction",
    "section": "",
    "text": "To teach you how to use R and RStudio as tools for applied epidemiology.1 Our goal is not to teach you to be a computer scientist or an advanced R programmer. Therefore, some readers who are experienced programmers may catch some technical inaccuracies regarding what we consider to be the fine points of what R is doing “under the hood.”\nTo make this writing as accessible and practically useful as possible without stripping out all of the complexity that makes doing epidemiology in real life a challenge. In other words, We’re going to try to give you all the tools you need to do epidemiology in “real world” conditions (as opposed to ideal conditions) without providing a whole bunch of extraneous (often theoretical) stuff that detracts from doing. Having said that, we will strive to add links to the other (often theoretical) stuff for readers who are interested.\nTo teach you to accomplish common tasks, rather than teach you to use functions or families of functions. In many R courses and texts, there is a focus on learning all the things a function, or set of related functions, can do. It’s then up to you, the reader, to sift through all of these capabilities and decided which, if any, of the things that can be done will accomplish the tasks that you are actually trying to accomplish. Instead, we will strive to start with the end in mind. What is the task we are actually trying to accomplish? What are some functions/methods we could use to accomplish that task? What are the strengths and limitations of each?\nTo start each concept by showing you the end result and then deconstruct how we arrived at that result, where possible. We find that it is easier for many people to understand new concepts when learning them as a component of a final product.\nTo learn concepts with data instead of (or alongside) mathematical formulas and text descriptions, where possible. We find that it is easier for many people to understand new concepts by seeing them in action.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "chapters/introduction.html#text-conventions-used-in-this-book",
    "href": "chapters/introduction.html#text-conventions-used-in-this-book",
    "title": "Introduction",
    "section": "Text conventions used in this book",
    "text": "Text conventions used in this book\n\nWe will hyperlink many keywords or phrases to their glossary entry.\nAdditionally, we may use bold face for a word or phrase that we want to call attention to, but it is not necessarily a keyword or phrase that we want to define in the glossary.\nHighlighted inline code is used to emphasize small sections of R code and program elements such as variable or function names.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "chapters/introduction.html#other-reading",
    "href": "chapters/introduction.html#other-reading",
    "title": "Introduction",
    "section": "Other reading",
    "text": "Other reading\nIf you are interested in R4Epi, you may also be interested in:\n\nHands-on Programming with R by Garrett Grolemund. This book is designed to provide a friendly introduction to the R language.\nR for Data Science by Hadley Wickham, Mine Çetinkaya-Rundel, and Garrett Grolemund. This book is designed to teach readers how to do data science with R.\nStatistical Inference via Data Science: A ModernDive into R and the Tidyverse. This book is designed to be a gentle introduction to the practice of analyzing data and answering questions using data the way data scientists, statisticians, data journalists, and other researchers would.\nReproducable Research with R and RStudio by Christopher Gandrud. This book gives you tools for data gathering, analysis, and presentation of results so that you can create dynamic and highly reproducible research.\nAdvanced R by Hadley Wickham. This book is designed primarily for R users who want to improve their programming skills and understanding of the language.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "chapters/introduction.html#footnotes",
    "href": "chapters/introduction.html#footnotes",
    "title": "Introduction",
    "section": "",
    "text": "In this case, “tools for applied epidemiology” means (1) understanding epidemiologic concepts; and (2) completing and interpreting epidemiologic analyses.↩︎",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "chapters/contributing/contributing.html",
    "href": "chapters/contributing/contributing.html",
    "title": "Contributing",
    "section": "",
    "text": "Typos\nThe easiest way for you to contribute is to help us clean up the little typos and grammatical errors that inevitably sneak into the text.\nIf you spot a typo, you can offer a correction directly in GitHub. You will first need to create a free GitHub account: sign-up at github.com. Later in the book, we will cover using GitHub in greater depth (See 4  Using git and GitHub). Here, we’re just going to walk you through how to fix a typo without much explanation of how GitHub works.\nLet’s say you spot a typo while reading along.\nNext, click the edit button in the toolbar as shown in the screenshot below.\nThe first time you click the icon, you will be taken to the R4Epi repository on GitHub and asked to fork it. For our purposes, you can think of a GitHub repository as being similar to a shared folder on Dropbox or Google Drive.\n“Forking the repository” basically just means “make a copy of the repository” on your GitHub account. In other words, copy all of the files that make up the R4Epi textbook to your GitHub account. Then, you can fix the typos you found in your copy of the files that make up the book instead of directly editing the actual files that make up the book. This is a safeguard to prevent people from accidentally making changes that shouldn’t be made.\nAfter you fork the repository, you will see a text editor on your screen.\nThe text editor will display the contents of the file used to make the chapter you were looking at when you clicked the edit button. In this example, it was a file named contributing.qmd. The .qmd file extension means that the file is a Quarto file. We will learn more about Quarto files in 3  Quarto Files, but for now just know that Quarto files can be used to create web pages and other documents that contain a mix of R code, text, and images.\nNext, scroll down through the text until you find the typo and fix it. In this case, line 11 contains the word “typoo”. To fix it, you just need to click in the editor window and begin typing. In this case, you would click next to the word “typoo” and delete the second “o”.\nNow, the only thing left to do is propose your typo fix to the authors. To do so, click the green Commit changes... button on the right side of the screen above the text editor (surrounded with a red box in the screenshot above). When you click it, a new Propose changes box will appear on your screen. Type a brief (i.e., 72 characters or less) summary of the change you made in the Commit message box. There is also an Extended description box where you can add a more detailed description of what you did. In the screenshot below, shows an example commit message and extended description that will make it easy for the author to quickly figure out exactly what changes are being proposed.\nNext, click the Propose changes button. That will take you to another screen where you will be able to create a pull request. This screen is kind of busy, but try not to let it overwhelm you.\nFor now, we will focus on the three different sections of the screen that are highlighted with a red outline. We will start at the bottom and work our way up. The red box that is closest to the bottom of the screenshot shows us that the change that made was on line 11. The word “typoo” (highlighted in red) was replaced with the word “typo” (highlighted in green). The red box in the middle of the screenshot shows us the brief description that was written for our proposed change – “Fix a typo in contributing.qmd”. Finally, the red box closest to the top of the screenshot is surrounding the Create pull request button. You will click it to move on with your pull request.\nAfter doing so, you will get one final chance to amend the description of your proposed changes. If you are happy with the commit message and description, then click the Create pull request button one more time. At this point, your job is done! It is now up to the authors to review the changes you’ve proposed and “pull” them into the file in their repository.\nIn case you are curious, here is what the process looks like on the authors’ end. First, when we open the R4Epi repository page on GitHub, we will see that there is a new pull request.\nWhen we open the pull request, we can see the proposed changes to the file.\nThen, all we have to do is click the Merge pull request button and the fixed file is “pulled in” to replace the file with the typo.",
    "crumbs": [
      "Contributing"
    ]
  },
  {
    "objectID": "chapters/contributing/contributing.html#typos",
    "href": "chapters/contributing/contributing.html#typos",
    "title": "Contributing",
    "section": "",
    "text": "Note\n\n\n\nForking the R4Epi repository does not cost any money or add any files to your computer.",
    "crumbs": [
      "Contributing"
    ]
  },
  {
    "objectID": "chapters/contributing/contributing.html#issues",
    "href": "chapters/contributing/contributing.html#issues",
    "title": "Contributing",
    "section": "Issues",
    "text": "Issues\nThere may be times when you see a problem that you don’t know how to fix, but you still want to make the authors aware of. In that case, you can create an issue in the R4Epi repository. To do so, navigate to the issue tracker using this link: https://github.com/brad-cannell/r4epi/issues.\n\n\n\n\n\n\n\n\n\nOnce there, you can check to see if someone has already raised the issue you are concerned about. If not, you can click the green “New issue” button to raise it yourself.\nPlease note that R4Epi uses a Contributor Code of Conduct. By contributing to this book, you agree to abide by its terms.",
    "crumbs": [
      "Contributing"
    ]
  },
  {
    "objectID": "chapters/contributing/contributing.html#license-information",
    "href": "chapters/contributing/contributing.html#license-information",
    "title": "Contributing",
    "section": "License Information",
    "text": "License Information\nThis book was created by Brad Cannell and is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License.",
    "crumbs": [
      "Contributing"
    ]
  },
  {
    "objectID": "chapters/about_the_authors/about_the_authors.html",
    "href": "chapters/about_the_authors/about_the_authors.html",
    "title": "About the Authors",
    "section": "",
    "text": "Brad Cannell\nMichael (Brad) Cannell, PhD, MPH\n  Associate Professor\nElder Mistreatment Lead, UTHealth Institute of Aging\nDirector, Research Informatics Core, Cizik Nursing Research Institute\nUTHealth Houston\nMcGovern Medical School\nJoan and Stanford Alexander Division of Geriatric & Palliative Medicine\nwww.bradcannell.com\nDr. Cannell received his PhD in Epidemiology, and Graduate Certificate in Gerontology, in 2013 from the University of Florida. He received his MPH with a concentration in Epidemiology from the University of Louisville in 2009, and his BA in Political Science and Marketing from the University of North Texas in 2005. During his doctoral studies, he was a Graduate Research Assistant for the Florida Office on Disability and Health, an affiliated scholar with the Claude D. Pepper Older Americans Independence Center, and a student-inducted member of the Delta Omega Honorary Society in Public Health. In 2016, Dr. Cannell received a Graduate Certificate in Predictive Analytics from the University of Maryland University College, and a Certificate in Big Data and Social Analytics from the Massachusetts Institute of Technology.\nHe previously held professional staff positions in the Louisville Metro Health Department and the Northern Kentucky Independent District Health Department. He spent three years as a project epidemiologist for the Florida Office on Disability and Health at the University of Florida. He also served as an Environmental Science Officer in the United States Army Reserves from 2009 to 2013.\nDr. Cannell’s research is broadly focused on healthy aging and health-related quality of life. Specifically, he has published research focusing on preservation of physical and cognitive function, living and aging with disability, and understanding and preventing elder mistreatment. Additionally, he has a strong background and training in epidemiologic methods and predictive analytics. He has been principal or co-investigator on multiple trials and observational studies in community and healthcare settings. He is currently the principal investigator on multiple data-driven federally funded projects that utilize technological solutions to public health issues in novel ways.\nContact\nConnect with Dr. Cannell and follow his work.",
    "crumbs": [
      "About the Authors"
    ]
  },
  {
    "objectID": "chapters/about_the_authors/about_the_authors.html#melvin-livingston",
    "href": "chapters/about_the_authors/about_the_authors.html#melvin-livingston",
    "title": "About the Authors",
    "section": "Melvin Livingston",
    "text": "Melvin Livingston\nMelvin (Doug) Livingston, PhD\n  Research Associate Professor\nDepartment of Behavioral, Social, and Health Education Sciences\nEmory University Woodruff Health Sciences Center\nRollins School of Public Health\nDr. Livingston’s Faculty Profile\nDr. Livingston is a methodologist with expertise in the the application of quasi-experimental design principals to the evaluation for both community interventions and state policies. He has particular expertise in time series modeling, mixed effects modeling, econometric methods, and power analysis. As part of his work involving community trials, he has been the statistician on the long term follow-up study of a school based cluster randomized trial in low-income communities with a focus on explaining the etiology of risky alcohol, drug, and sexual behaviors. Additionally, he was the statistician for a longitudinal study examining the etiology of alcohol use among racially diverse and economically disadvantaged urban youth, and co-investigator for a NIAAA- and NIDA-funded trial to prevent alcohol use and alcohol-related problems among youth living in high-risk, low-income communities within the Cherokee Nation. Prevention work at the community level led him to an interest in the impact of state and federal socioeconomic policies on health outcomes. He is a Co-Investigator of a 50-state, 30-year study of effects of state-level economic and education policies on a diverse set of public health outcomes, explicitly examining differential effects across disadvantaged subgroups of the population.\nHis current research interests center around the application of quasi-experimental design and econometric methods to the evaluation of the health effects of state and federal policy.\nContact\nConnect with Dr. Livingston and follow his work.",
    "crumbs": [
      "About the Authors"
    ]
  },
  {
    "objectID": "chapters/installing_r_and_rstudio/installing_r_and_rstudio.html",
    "href": "chapters/installing_r_and_rstudio/installing_r_and_rstudio.html",
    "title": "1  Installing R and RStudio",
    "section": "",
    "text": "1.1 Download and install on a Mac\nStep 2: Navigate to the Comprehensive R Archive Network (CRAN), which is located at https://cran.r-project.org/.\nStep 3: Click on Download R for macOS.\nStep 4: Click on the link for the latest version of R. As you are reading this, the newest version may be different than the version you see in this picture, but the location of the newest version should be roughly in the same place – the middle of the screen under “Latest release:”. After clicking the link, R should start to download to your computer automatically.\nStep 5: Locate the package file you just downloaded and double click it. Unless you’ve changed your download settings, this file will probably be in your “downloads” folder. That is the default location for most web browsers. After you locate the file, just double click it.\nStep 6: A dialogue box will open and ask you to make some decisions about how and where you want to install R on your computer. We typically just click “continue” at every step without changing any of the default options.\nIf R installed properly, you should now see it in your applications folder.\nStep 7: Now, we need to install the RStudio IDE. To do this, navigate to the RStudio desktop download website, which is located at https://posit.co/download/rstudio-desktop/. On that page, click the button to download the latest version of RStudio for your computer. Note that the website may look different that what you see in the screenshot below because websites change over time.\nStep 8: Again, locate the DMG file you just downloaded and double click it. Unless you’ve changed your download settings, this file should be in the same location as the R package file you already downloaded.\nStep 9: A new finder window should automatically pop up that looks like the one you see below. Click on the RStudio icon and drag it into the Applications folder.\nYou should now see RStudio in your Applications folder. Double click the icon to open RStudio.\nIf this warning pops up, just click Open.\nThe RStudio IDE should open and look something like the window you see here. If so, you are good to go! 🎉",
    "crumbs": [
      "Getting Started",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Installing R and RStudio</span>"
    ]
  },
  {
    "objectID": "chapters/installing_r_and_rstudio/installing_r_and_rstudio.html#download-and-install-on-a-pc",
    "href": "chapters/installing_r_and_rstudio/installing_r_and_rstudio.html#download-and-install-on-a-pc",
    "title": "1  Installing R and RStudio",
    "section": "1.2 Download and install on a PC",
    "text": "1.2 Download and install on a PC\nStep 2: Navigate to the Comprehensive R Archive Network (CRAN), which is located at https://cran.r-project.org/.\n\n\n\n\n\n\n\n\n\nStep 3: Click on Download R for Windows.\n\n\n\n\n\n\n\n\n\nStep 4: Click on the base link.\n\n\n\n\n\n\n\n\n\nStep 5: Click on the link for the latest version of R. As you are reading this, the newest version may be different than the version you see in this picture, but the location of the newest version should be roughly the same. After clicking, R should start to download to your computer.\n\n\n\n\n\n\n\n\n\nStep 6: Locate the installation file you just downloaded and double click it. Unless you’ve changed your download settings, this file will probably be in your downloads folder. That is the default location for most web browsers.\n\n\n\n\n\n\n\n\n\nStep 7: A dialogue box will open that asks you to make some decisions about how and where you want to install R on your computer. We typically just click “Next” at every step without changing any of the default options.\n\n\n\n\n\n\n\n\n\nIf R installed properly, you should now see it in the Windows start menu.\n\n\n\n\n\n\n\n\n\nStep 8: Now, we need to install the RStudio IDE. To do this, navigate to the RStudio desktop download website, which is located at https://posit.co/download/rstudio-desktop/. On that page, click the button to download the latest version of RStudio for your computer. Note that the website may look different that what you see in the screenshot below because websites change over time.\n\n\n\n\n\n\n\n\n\nStep 9: Again, locate the installation file you just downloaded and double click it. Unless you’ve changed your download settings, this file should be in the same location as the R installation file you already downloaded.\n\n\n\n\n\n\n\n\n\nStep 10: Another dialogue box will open and ask you to make some decisions about how and where you want to install RStudio on your computer. We typically just click “Next” at every step without changing any of the default options.\n\n\n\n\n\n\n\n\n\nWhen RStudio is finished installing, you should see RStudio in the Windows start menu. Click the icon to open RStudio.\n\n\n\n\n\n\n\n\n\nThe RStudio IDE should open and look something like the window you see here. If so, you are good to go! 🎉",
    "crumbs": [
      "Getting Started",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Installing R and RStudio</span>"
    ]
  },
  {
    "objectID": "chapters/what_is_r/what_is_r.html",
    "href": "chapters/what_is_r/what_is_r.html",
    "title": "2  What is R?",
    "section": "",
    "text": "2.1 What is data?\nData is information about objects (e.g., people, places, schools) and observable phenomenon (e.g., weather, temperatures, and disease symptoms) that is recorded and stored somehow as a collection of symbols, numbers, and letters. So, data is just information that has been “written” down.\nHere we have a table, which is a common way of organizing data. In R, we will typically refer to these tables as data frames.\nEach box in a data frame is called a cell.\nMoving from left to right across the data frame are columns. Columns are also sometimes referred to as variables. In this book, we will often use the terms columns and variables interchangeably. Each column in a data frame has one, and only one, type. For now, know that the type tells us what kind of data is contained in a column and what we can do with that data. You may have already noticed that 3 of the columns in the table we’ve been looking at contain numbers and 1 of the columns contains words. These columns will have different types in R and we can do different things with them based on their type. For example, we could ask R to tell us what the average value of the numbers in the height column are, but it wouldn’t make sense to ask R to tell us the average value of the words in the Gender column. We will talk more about many of the different column types exist in R later in this book.\nThe information contained in the first cell of each column is called the column name (or variable) name.\nR gives us a lot of flexibility in terms of what we can name our columns, but there are a few rules.\nMoving from top to bottom across the table are rows, which are sometimes referred to as records.\nFinally, the contents of each cell are called values.\nYou should now be up to speed on some basic terminology used by R, as well as other analytic, database, and spreadsheet programs. These terms will be used repeatedly throughout the course.",
    "crumbs": [
      "Getting Started",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>What is R?</span>"
    ]
  },
  {
    "objectID": "chapters/what_is_r/what_is_r.html#what-is-data",
    "href": "chapters/what_is_r/what_is_r.html#what-is-data",
    "title": "2  What is R?",
    "section": "",
    "text": "Column names can contain letters, numbers and the dot (.) or underscore (_) characters.\n\nAdditionally, they can begin with a letter or a dot – as long as the dot is not followed by a number. So, a name like “.2cats” is not allowed.\n\nFinally, R has some reserved words that you are not allowed to use for column names. These include: “if”, “else”, “repeat”, “while”, “function”, “for”, “in”, “next”, and “break”.",
    "crumbs": [
      "Getting Started",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>What is R?</span>"
    ]
  },
  {
    "objectID": "chapters/what_is_r/what_is_r.html#what-is-r",
    "href": "chapters/what_is_r/what_is_r.html#what-is-r",
    "title": "2  What is R?",
    "section": "2.2 What is R?",
    "text": "2.2 What is R?\n\n\n\n\n\n\n\n\n\nSo, what is R? Well, R is an open source statistical programming language that was created in the 1990’s specifically for data analysis. We will talk more about what open source means later, but for now, just think of R as an easy (relatively 😂) way to ask your computer to do math and statistics for you. More specifically, by the end of this book you will be able to independently use R to transfer data, manage data, analyze data, and present the results of your analysis. Let’s quickly take a closer look at each of these.\n\n\n\n\n\n\n\n\n\n\n2.2.1 Transferring data\n\n\n\n\n\n\n\n\n\nSo, what do we mean by “transfer data”? Well, individuals and organizations store their data using different computer programs that use different file types. Some common examples that you may come across in epidemiology are database files, spreadsheets, raw data files, and SAS data sets. No matter how the data is stored, you can’t do anything with it until you can get it into R, in a form that R can use, and in a location that you can reach. In other words, transferring your data. Therefore, among our first tasks in this course will be to transfer data.\n\n\n2.2.2 Managing data\n\n\n\n\n\n\n\n\n\nThis isn’t very specific, but managing data is all the things you may have to do to your data to get it ready for analysis. You may also hear people refer to this process as data wrangling or data munging. Some specific examples of data management tasks include:\n\nValidating and cleaning data. In other words, dealing with potential errors in the data.\n\nSubsetting data. For example, using only some of the columns or some of the rows.\n\nCreating new variables. For example, creating a BMI variable in a data frame that was sent to you with height and weight columns.\n\nCombining data frames. For example, combining sociodemographic data about study participants with data collected in the field during an intervention.\n\nYou may sometimes hear people refer to the 80/20 rule in reference to data management. This “rule” says that in a typical data analysis project, roughly 80% of your time will be spent on data management and only 20% will be spent on the analysis itself. I can’t provide you with any empirical evidence (i.e., data) to back this claim up. But, as a person who has been involved in many projects that involve the collection and analysis of data, I can tell you anecdotally that this ”rule” is probably pretty close to being accurate in most cases.\nAdditionally, it’s been my experience that most students of epidemiology are required to take one or more classes that emphasize methods for analyzing data; however, almost none of them have taken a course that emphasizes data management!\nTherefore, because data management is such a large component of most projects that involve the collection and analysis of data, and because most readers will have already been exposed to data analysis to a much greater extent than data management, this course will heavily emphasize the latter.\n\n\n2.2.3 Analyzing data\n\n\n\n\n\n\n\n\n\nAs just discussed, this is probably the capability you most closely associate with R, and there is no doubt that R is a powerful tool for analyzing data. However, in this book we won’t go beyond using R to calculate basic descriptive statistics. For our purposes, descriptive statistics include:\n\nMeasures of central tendency. For example, mean, median, and mode.\n\nMeasures of dispersion. For example, variance and standard error.\n\nMeasures for describing categorical variables. For example, counts and percentages.\n\nDescribing data using graphs and charts. With R, we can describe our data using beautiful and informative graphs.\n\n\n\n2.2.4 Presenting data\n\n\n\n\n\n\n\n\n\nAnd finally, the ultimate goal is typically to present your findings in some form or another. For example, a report, a website, or a journal article. With R you can present your results in many different formats with relative ease. In fact, this is one of my favorite things about R and RStudio. In this class you will learn how to take your text, tabular, or graphical results and then publish them in many different formats including Microsoft Word, html files that can be viewed in web browsers, and pdf documents. Let’s take a look at some examples.\n\nMicrosoft Word documents. Click here to view an example report created for one of my research projects in Microsoft Word.\n\nPDF documents. Click here to view a data dictionary I created in PDF format.\n\nHTML files. Hypertext Markup Language (HTML) files are what you are looking at whenever you view a webpage. You can use R to create HTML files that others can view in their web browser. You can email them these files to view in their web browser, or you can make them available for others to view online just like any other website. Click here to view an example dashboard I created for one of my research projects.\n\nWeb applications. You can even use R to create full-fledged web applications. View the RStudio website to see some examples.",
    "crumbs": [
      "Getting Started",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>What is R?</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "1. GitHub. About repositories. Published online\nDecember 2023.\n\n\n2. GitHub. About Issues. Github;\n2024.\n\n\n3. R\nCore Team. What Is r? R Foundation for Statistical Computing;\n2024.\n\n\n4. RStudio. RStudio. Published online\n2020.",
    "crumbs": [
      "References",
      "References"
    ]
  },
  {
    "objectID": "chapters/appendices/glossary.html",
    "href": "chapters/appendices/glossary.html",
    "title": "Appendix A — Glossary",
    "section": "",
    "text": "Console. Coming soon.\nData frame. For our purposes, data frames are just R’s term for data set or data table. Data frames are made up of columns (variables) and rows (observations). In R, all columns of a data frame must have the same length.\nFunctions. Coming soon.\n\nArguments: Arguments always go inside the parentheses of a function and give the function the information it needs to give us the result we want.\nPass: In programming lingo, you pass a value to a function argument. For example, in the funtion call seq(from = 2, to = 100, by = 2) we could say that we passed a value of 2 to the from argument, we passed a value of 100 to the to argument, and we passed a value of 2 to the by argument.\nReturns: Instead of saying, “the seq() function gives us a sequence of numbers…” we could say, “the seq() function returns us a sequence of numbers…” In programming lingo, functions return one or more results.\n\nGlobal environment. Coming soon.\n\nIssue (GitHub)\n\nGitHub’s documentation says issues are “items you can create in a repository to plan, discuss and track work. Issues are simple to create and flexible to suit a variety of scenarios. You can use issues to track work, give or receive feedback, collaborate on ideas or tasks, and efficiently communicate with others.”1\n\n\nObjects. Coming soon.\n\nR\n\nR’s documentation says “R is a language and environment for statistical computing and graphics. It is a GNU project which is similar to the S language and environment which was developed at Bell Laboratories (formerly AT&T, now Lucent Technologies) by John Chambers and colleagues.”2 R is open source, and you can download it for free from The Comprehensive R Archive Network (CRAN) at https://cran.r-project.org/.\n\nRepository\n\nGitHub’s documentation says “a repository contains all of your code, your files, and each file’s revision history. You can discuss and manage your work within the repository.”3 A repository can exist locally as a set of files on your computer. A repository can also exist remotely as a set of files on a sever somewhere, for example, on GitHub.\n\nRStudio\n\nRStudio is an integrated development environment (IDE) for R. It includes a console, syntax-highlighting editor that supports direct code execution, as well as tools for plotting, history, debugging and workspace management. RStudio is available in open source and commercial editions and runs on the desktop (Windows, Mac, and Linux) or in a browser connected to RStudio Server or RStudio Server Pro (Debian/Ubuntu, Red Hat/CentOS, and SUSE Linux).4\n\n\n\n\n\n\n1. GitHub. About Issues. Github; 2024.\n\n\n2. R Core Team. What Is r? R Foundation for Statistical Computing; 2024.\n\n\n3. GitHub. About repositories. Published online December 2023.\n\n\n4. RStudio. RStudio. Published online 2020.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Glossary</span>"
    ]
  }
]
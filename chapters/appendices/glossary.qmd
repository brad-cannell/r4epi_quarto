# Glossary {#sec-glossary}

[Bivariate]{#glossary-bivariate}

:  Involving two variables.

[Complete case analysis]{#glossary-complete-case-analysis}

:  A summary containing the count and percent of non-missing values for a categorical variable.

[Console]{#glossary-console}

:  The console is located in RStudio's bottom-right pane by default. The R console is an interactive programming environment where we can enter and execute R commands. It's the the most basic interface for interacting with R, providing immediate feedback and results from the code we enter. The R console is useful for testing small pieces of code and interactive data exploration. However, we recommend using R scripts or Quarto/ files for all but the simplest programming or data analysis tasks.

**Data frame**. For our purposes, data frames are just R's term for data set or data table. Data frames are made up of columns (variables) and rows (observations). In R, all columns of a data frame must have the same length.

[For loop]{#glossary-for-loop}

:  A for loop is a programming statement that can execute a block of code repeatedly while systematically iterating over a predefined range, sequence, or collection of values.

[Frequency count]{#glossary-frequency-count}

:  The frequency count may also be referred to as simply the **frequency**, the **count**, or the **n**. It is a summary of data by the number of distinct occurrences of an event or observation.


**Functions**. Coming soon.

  * [Arguments]{#glossary-arguments}

    :  Arguments always live _inside_ the parentheses of R functions and receive information the function needs to generate the result we want.
    
  * [Pass]{#glossary-pass}

    :  In programming lingo, we _pass_ a value to a function argument. For example, in the function call `seq(from = 2, to = 100, by = 2)` we could say that we _passed_ a value of 2 to the `from` argument, we _passed_ a value of 100 to the `to` argument, and we _passed_ a value of 2 to the `by` argument.

  * [Return]{#glossary-return}

    :  Instead of saying, “the `seq()` function _gives us_ a sequence of numbers…” we could say, “the `seq()` function _returns_ a sequence of numbers…” In programming lingo, functions _return_ one or more results.
  
**Global environment**. Coming soon.

[Issue (GitHub)]{#glossary-issue}

:  GitHub's documentation says issues are "items you can create in a repository to plan, discuss and track work. Issues are simple to create and flexible to suit a variety of scenarios. You can use issues to track work, give or receive feedback, collaborate on ideas or tasks, and efficiently communicate with others."@GitHub2024-im

[Iteratively]{#glossary-iteratively}

:  A method of solving a problem by repeatedly executing a set of instructions in a step-by-step manner, often using loops. This approach can improve efficiency and help prevent errors. 

[Lexical scoping rules]{#glossary-lexical-scoping-rules}

:  Lexical scoping rules define an object's accessibility based on where it is declared in the code's structure rather than how or when it's called. 

[Marginal totals]{#glossary-marginal-totals}

:  In a contingency table, marginal totals are the sums of observations for each row (found in the last column) and each column (found in the last row). The overall total, found in the bottom-right cell, represents the sum of all observations in the table.

[Mean]{#glossary-mean}

:  The arithmetic mean is a measure of central tendency that represents the average value of a numeric variable calculated by taking the sum of the values of the variable and then dividing this sum by the total number of values. It is often referred to as $\bar{x}$.

[Median]{#glossary-median}

:  The median is a measure of central tendency that represents the middle number in a list of numbers that has been sorted in order of magnitude. If the list of numbers has an odd number of values, the median is the middle number; if it has an even number, the median is the average of the two middle numbers. Compared to the mean, it is relatively resistant to extreme values.

[Mode]{#glossary-mode}

:  The mode is a measure of central tendency that represents the value that is most often observed in a set of data. A dataset may have one mode (unimodal), multiple modes (multimodal), or no mode (if the frequency of each value is the same).

**Objects**. Coming soon.

[Outcome variable]{#glossary-outcome-variable} 

:  The outcome variable is the variable whose value we are attempting to predict, estimate, or determine. It is also known as the dependent variable or the response variable.

[Percentage]{#glossary-percentage} 

:  A percentage is the relative frequency of an event or observation within a data set expressed as a percentage. It is calculated by dividing the number of distinct occurrences of the event or observation by the total number of observations and then multiplying it by 100.

[Predictor variable]{#glossary-predictor-variable} 

:  The predictor variable is the variable that is used to explain or help predict the value of the outcome variable. It is also known as the **independent variable** or the **explanatory variable**.

[Proportion]{#glossary-proportion} 

:  A proportion is the relative frequency of an event or observation within a data set which can be expressed as a fraction or percentage. It is calculated by dividing the number of distinct occurrences of the event or observation by the total number of observations.

[R]{#glossary-r} 

:  R's documentation says "R is a language and environment for statistical computing and graphics. It is a GNU project which is similar to the S language and environment which was developed at Bell Laboratories (formerly AT&T, now Lucent Technologies) by John Chambers and colleagues."@R_Core_Team2024-sk R is open source, and you can download it for free from The Comprehensive R Archive Network (CRAN) at https://cran.r-project.org/.

[Range]{#glossary-range} 

:  The range is a measure of the spread of a data set, calculated as the difference between the maximum and minimum values.
  
[Repository]{#glossary-repository} 

:  GitHub's documentation says "a repository contains all of your code, your files, and each file's revision history. You can discuss and manage your work within the repository."@GitHub2023-tt A repository can exist _locally_ as a set of files on your computer. A repository can also exist _remotely_ as a set of files on a sever somewhere, for example, on GitHub.

[RStudio]{#glossary-rstudio} 

:  RStudio is an integrated development environment (IDE) for R. It includes a console, syntax-highlighting editor that supports direct code execution, as well as tools for plotting, history, debugging and workspace management. RStudio is available in open source and commercial editions and runs on the desktop (Windows, Mac, and Linux) or in a browser connected to RStudio Server or RStudio Server Pro (Debian/Ubuntu, Red Hat/CentOS, and SUSE Linux). @RStudio2020-fe

[Split - Apply - Combine]{#glossary-split-apply-combine}

:  This is a data analysis strategy that involves splitting data up into smaller components, applying a calculation separately to each smaller component, and then combining the individual results back together as a single result. `dplyr`'s `group_by()` function uses this strategy.

[Standard deviation]{#glossary-standard-deviation}

:  Standard deviation is a measure of the spread of a data set, calculated as the square root of the variance, which is the average of the squared differences between each value and the mean.

[Two-way frequency table]{#glossary-two-way-frequency-table}

:  A two-way frequency table is a table used to summarize the relationship between two categorical variables by displaying the observed frequencies for their combinations. It is also known as a **crosstab** or **contingency table**.

[Univariate]{#glossary-univariate}

:  Involving a single numerical or a single categorical variable.

[Variance]{#glossary-variance}

:  Variance is a measure of the spread of a data set, calculated as the average of the squared differences between each value and the mean.

[Non-standard Evaluation]{#glossary-non-standard-evaluation}

:  In R, **non-standard evaluation (NSE)** is a set of language features that allow functions to capture, inspect, and manipulate the _expressions_ that users write, rather than the values those expressions evaluate to. NSE powers the concise, “bare-variable-name” syntax in packages like **dplyr** (`filter(df, age > 30)`) and tidy-evaluation (`{{ }}`, `.data[[ ]]`) tools that let you combine NSE with standard evaluation in a controlled way.

[Conditional Operations]{#glossary-conditional-operations}

:  Programming steps that execute different code paths depending on whether a logical test is **TRUE** or **FALSE**. In R this includes the `if` / `else` family, vectorised helpers such as `ifelse()`, and the `case_when()` and `dplyr::recode()` functions.

[Vectorization]{#glossary-vectorization}

:  A programming technique in which operations are applied to entire **vectors** (or matrices/data frames) in a single step rather than iterating through elements one by one. Vectorized code in R (e.g., `x * 2` or `mean(x)`) is typically clearer and much faster because heavy computation occurs in compiled C/C++ or Fortran under the hood.

[Data Checks]{#glossary-data-checks}

:  Procedures used to confirm that the contents, structure, and metadata of a data set meet expected standards _before_ analysis. Examples include type checks (numeric vs. character), range checks (no ages below 0), completeness checks (missing–value rates), and cross-field consistency checks (start ≤ end dates).

[MDL]{#glossary-mdl}

:  **Minimum Description Length (MDL) principle** — an information-theoretic model-selection rule stating that the best explanation of data is the one that yields the shortest total code length required to describe _both_ the model and the data given that model. MDL provides a formal way to balance goodness-of-fit against model complexity.

[List-wise Deletion]{#glossary-list-wise-deletion}

:  A missing-data handling method in which any observation (row) that contains _at least one_ missing value on variables of interest is completely removed from the analysis, leaving only “complete cases.”

[Regular Expressions]{#glossary-regular-expressions}

:  Compact strings that describe search patterns for text. Regular expressions (regexes) are used for tasks such as finding, extracting, replacing, or validating character data (`stringr`, `grepl()`, `gsub()`, etc.).

[Token]{#glossary-token}

:  The smallest meaningful unit in a regular expression or in parsed text. In regex syntax, tokens include literal characters (`a`), metacharacters (`\d`), or entire character classes (`[A-Z]`).

[Quantifier]{#glossary-quantifier}

:  A regex symbol that specifies _how many_ times the preceding token should occur. Common quantifiers include `*` (0 +), `+` (1 +), `?` (0 – 1), and `{m,n}` (between _m_ and _n_ times).

[Anchor]{#glossary-anchor}

:  A regex metacharacter that pins a match to a position rather than characters: `^` matches the start of a string or line, and `$` matches the end.

[Collapse]{#glossary-collapse}

:  To reduce a data set to a smaller, summarised form by grouping and aggregating. In **dplyr**, `summarise()` collapses multiple rows per group into a single summary row.

[Merge]{#glossary-merging}

:  A base-R term (function `merge()`) for combining two data frames by matching rows on one or more _key_ variables. Rows that do not match can be kept, dropped, or cause missing values depending on the arguments.

[Join]{#glossary-join}

:  In **dplyr** and SQL, an operation that brings together two tables based on shared key columns. Variants include `inner_join()` (rows must match), `left_join()` (keep all rows from the left table), `full_join()`, etc.

[Key]{#glossary-key}

:  One or more variables whose combined values uniquely identify a record (row) within a data set and enable accurate merges/joins with other tables.

[Person-level]{#glossary-person-level}

:  A data structure in which each row represents exactly _one person_, often containing time-invariant attributes (e.g., date of birth, sex) or pre-aggregated summaries.

[Wide]{#glossary-wide}

:  A format where repeated measures or related observations are stored in **separate columns**. For example, test scores across three terms might appear as `score_T1`, `score_T2`, `score_T3` in the same row.

[Person-period]{#glossary-person-period}

:  A panel/longitudinal data layout where each row corresponds to a unique combination of a person **and** a time period (e.g., person × year or person × visit), holding variables that can change over time.

[Long]{#glossary-long}

:  A tidy-data format where repeated measures are stacked **down rows** rather than across columns: one column stores the _measurement_ (value), another records the _variable_ or _occasion_ label, and each row corresponds to one observation at one time point for one entity.
